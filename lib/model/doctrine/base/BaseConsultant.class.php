<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Consultant', 'doctrine');

/**
 * BaseConsultant
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $job
 * @property integer $user_id
 * @property Doctrine_Collection $Event
 * @property sfGuardUser $User
 * 
 * @method integer             getId()      Returns the current record's "id" value
 * @method string              getJob()     Returns the current record's "job" value
 * @method integer             getUserId()  Returns the current record's "user_id" value
 * @method Doctrine_Collection getEvent()   Returns the current record's "Event" collection
 * @method sfGuardUser         getUser()    Returns the current record's "User" value
 * @method Consultant          setId()      Sets the current record's "id" value
 * @method Consultant          setJob()     Sets the current record's "job" value
 * @method Consultant          setUserId()  Sets the current record's "user_id" value
 * @method Consultant          setEvent()   Sets the current record's "Event" collection
 * @method Consultant          setUser()    Sets the current record's "User" value
 * 
 * @package    paramedical
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseConsultant extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('consultant');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 8,
             ));
        $this->hasColumn('job', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Event', array(
             'local' => 'id',
             'foreign' => 'consultant_id'));

        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id'));
    }
}