<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Consultant', 'doctrine');

/**
 * BaseConsultant
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $firstname
 * @property string $lastname
 * @property string $job
 * @property Doctrine_Collection $Consultants
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method string              getFirstname()   Returns the current record's "firstname" value
 * @method string              getLastname()    Returns the current record's "lastname" value
 * @method string              getJob()         Returns the current record's "job" value
 * @method Doctrine_Collection getConsultants() Returns the current record's "Consultants" collection
 * @method Consultant          setId()          Sets the current record's "id" value
 * @method Consultant          setFirstname()   Sets the current record's "firstname" value
 * @method Consultant          setLastname()    Sets the current record's "lastname" value
 * @method Consultant          setJob()         Sets the current record's "job" value
 * @method Consultant          setConsultants() Sets the current record's "Consultants" collection
 * 
 * @package    paramedical
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseConsultant extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('consultant');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'notnull' => false,
             ));
        $this->hasColumn('firstname', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('lastname', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('job', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Event as Consultants', array(
             'local' => 'id',
             'foreign' => 'consultant_id'));
    }
}